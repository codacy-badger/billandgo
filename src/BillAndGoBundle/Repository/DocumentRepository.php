<?php

/**
 *
 *  * This is an iumio component [https://iumio.com]
 *  *
 *  * (c) Mickael Buliard <mickael.buliard@iumio.com>
 *  *
 *  * Bill&Go, gÃ©rer votre administratif efficacement [https://billandgo.fr]
 *  *
 *  * To get more information about licence, please check the licence file
 *
 */

namespace BillAndGoBundle\Repository;

use BillAndGoBundle\Entity\User;
use Doctrine\ORM\EntityRepository;

/**
 * DocumentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DocumentRepository extends EntityRepository
{
    /**
     * @param integer $refuser
     * @return array
     */
    public function findAllEstimate(int $refuser) : array
    {
        $qb = $this->createQueryBuilder('doc');
        $qb
            ->select('doc')
            ->where('doc.refUser = :user')
            ->setParameter('user', $refuser)
            ->andWhere('doc.type = 1');
        return $qb->getQuery()->getResult();
    }

    /**
     * @param integer $refuser
     * @return array
     */
    public function findAllBill(int $refuser) : array
    {
        $qb = $this->createQueryBuilder('doc');
        $qb
            ->select('doc')
            ->where('doc.refUser = :user')
            ->setParameter('user', $refuser)
            ->andWhere('doc.type = 0');
        return $qb->getQuery()->getResult();
    }

    /**
     * @param User $user
     * @param string $type
     * @param null $begin
     * @param null $end
     * @param array $status
     * @return array
     */
    public function findByDate(
        User $user,
        string $type,
        $begin = null,
        $end = null,
        array $status
    ) : array {
        $typeBool = ($type == 'estimate') ? 1 : 0;
        $qb = $this->createQueryBuilder('doc');
        $qb
            ->select('doc')
            ->where('doc.refUser = :user')
            ->setParameter('user', $user)
            ->andWhere('doc.type = '.$typeBool)
        ;
        if ((null !== $begin) && (!empty($begin))) {
            $qb
                ->andWhere('doc.sentDate >= :begin')
                ->setParameter('begin', new \DateTime($begin));
        }
        if ((null !== $end) && (!empty($begin))) {
            $qb
                ->andWhere('doc.sentDate <= :end')
                ->setParameter('end', new \DateTime($end));
        }
        if (!empty($status)) {
            $qb
                ->andWhere('doc.status IN (:status)')
                ->setParameter('status', $status);
        }
        return $qb->getQuery()->getResult();
    }
}
